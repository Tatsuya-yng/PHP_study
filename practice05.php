Laravel とは
web フレームワークと Laravel の特徴を理解する。



フレームワーク以前の問題点
PHP に限らず、web 開発を行うときには典型的な問題がある。
おおまかには、セキュリティにまつわる問題、知識共有の問題、拡張性の問題。
イメージが付きやすいように、家を作る工程で考える。



セキュリティにまつわる問題
「安全な家を作って」といわれて、何をイメージするか。
地震に対して安全ということであれば、「家を作る前の基礎がしっかりしている」「柱が計算された間隔で立てられている」といったもの。
火事に対して安全ということであれば、「壁が燃えづらい素材でできている」「スプリンクラーが設置されている」といったもの。
泥棒に対して安全ということであれば、「網膜認証がついた玄関が整備されている」「留守のときに人影があったら警報を鳴らす」といったもの。
あなたが家を作る大工さんだった場合、これらを全て対策をとることはできるのか？



知識共有の問題
なんだかんだあり、半年後、あなた一人で家を建てることに成功したとする。
そして別の家を建てることになったため、Aさんに建てた家のメンテナンスを任せることになった。
あなたは忙しく別の家を建てているため、Aさんからの質問に答える時間がない。
そのため、Aさんは自力であなたの建てた家の構造を調べる必要が出てくる。
半年間建てた家の構造を調べるのにはとても時間がかかってします。
また、例えば壁の中や天井裏などの見えないところの構造を把握するのはとても難しい。
そんな中、「家のどこからか水漏れがする」「人感センサーが動かなくなった」
「家の二階にもインターネットをつなげるようにケーブルを通してほしい」などと家の主から要求が来ました。家の作りをしらないAさんは、どうしたらよいのだろうか？



拡張性の問題
別の家を建てるのが終わったあなたは、大変そうなAさんの代わりに再び最初の家のメンテナンスの担当になった。
そんなときに、家の主から「両親が同居することになったから、部屋を増築したい」と依頼が来た。
家を作ることに精一杯だったあなたは増築する前提で家を作っておらず、増築したい場所には家にとって重要な柱が立てられ、壁には排水管や電気などのケーブル類が通っている状況だ。
無理に増築すると地震に対して弱くなってしまったり、ケーブルを別の壁から通す必要があるために増築する部屋とは関係ない部屋の壁に穴を開けたりする必要が出てきた。
さて、こんな状況で部屋の増築がうまくいくだろうか。



フレームワークの登場
このような問題を解消するためにフレームワークが考案された。
フレームワークとは、誰が作っても「安全性を確保」しつつ、また「どのような作りになっているか把握」しやすく、さらに「拡張することを前提」に、プログラムを作ることのできるようにするためのものだ。
例えば、家を作るプロジェクトが開始した時点で、家の基礎や柱などのような、共通するシステムの根幹の部分は構築さる。
その共通している部分は多くの人たちの協力の下に作られているため、安全かつ拡張しやすい前提で作られている。
また、独自に作りたい機能に関しても、フレームワークのパーツを呼び出して作ることができるようになっている。
それらのパーツも多くの人達が使ってきたもののため、安全で拡張しやすく、またどのように作られているかがわかりやすい構成になってしまう。
そのため、一つのプロジェクトで何人かがそれぞれ別々の機能を作っても、大体同じような作りでプログラムが完成する。
PHPだけでもCakePHPやSymfonyなど、様々なフレームワークがありますが、割と最近になって登場し、また海外でもよく使われるようになったフレームワークとして、今回扱うLaravelがある。



Laravel の特徴
Laravel
Laravel は 2010 年代前半に開発された、PHP の代表的な MVC フレームワークの一つ。
日本語ページのサブテーマ
PHPに支障はない。
楽しくコーディングし、新しい息吹を楽しむ。
にあるように、他のフレームワークよりも楽に楽しくをモットーに、Laravelは作られている。
とはいえ、今まで学んできたPHPの知識だけではなく
Laravelを使うためのノウハウが必要なことも事実。



MVC モデルについて
MVCモデル とはフレームワークモデルの一つ。
Laravelは、プロジェクトを作成して開発を進めていきますが、プロジェクト内が Model(モデル)、View（ビュー）、Controller(コントローラー)という3つの機能で構成されている。
が、実際にはMVCの他にもRouting(ルーティング)という機能も使われているため、特にLaravelの場合は次のような順番でWebサイトが公開されていると覚えて奥。
MVCフレームワーク

